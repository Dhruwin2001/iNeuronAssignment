create database TASK1
   use database TASK1
  
 --TASK1
  
   Create or replace table shopping_history(
product varchar(30),
quantity integer,
unit_price integer)

insert into shopping_history values
('milk',3,10),
('bread',7,3),
('bread',5,2)

select * from shopping_history;   
   
   ANSWER:
   
   select product,
   sum(quantity*unit_price) as total_price 
   from shopping_history 
   group by product
   -----------------------------------------
   
   
   --TASk2
   
     create or replace table phones (
name varchar(30) not null unique,
phone_number integer not null unique)

create or replace table calls(
id integer,
caller integer not null,
callee integer not null,
duration integer,
unique (id))

insert into phones values ('jack',1234),
('lena',3333),
('mark',9999),
('anna',7582)


insert into calls values(25,1234,7582,8),
(7,9999,7582,1),
(18,9999,3333,4),
(2,7582,3333,3),
(3,3333,1234,1),
(21,3333,1234,1);
   
   
      select * from phones
      select* from calls

   with total_duration_details as(
with caller_callee_details as
(select p.name as customer_name,c.caller as caller,c.duration as duration from phones p left outer join calls c on p.phone_number = c.caller
union all
select p.name as customer_name,c.callee as callee,c.duration as duration from phones p left outer join calls c on p.phone_number = c.callee)
select customer_name,sum(duration) as total_duration from caller_callee_details group by customer_name)
select * from total_duration_details where total_duration >= 10
--------------------------------------------------------------------------------------------------------------------------------------------

create or replace table phones1 (
name varchar(30) not null unique,
phone_number integer not null unique)

create or replace table calls1(
id integer,
caller integer not null,
callee integer not null,
duration integer,
unique (id))

insert into phones1 values
('John',6356),
('adison',4315),
('kate',8003),
('ginny',9831)



insert into calls1 values(65,8003,9831,7),
(100,9831,8003,3),
(145,4315,9831,18)

select * from phones1
select * from calls1

with total_duration_details as(
with caller_callee_details as
(select p.name as customer_name,c.caller as caller,c.duration as duration from phones1 p left outer join calls1 c on p.phone_number = c.caller
union all
select p.name as customer_name,c.callee as callee,c.duration as duration from phones1 p left outer join calls1 c on p.phone_number = c.callee)
select customer_name,sum(duration) as total_duration from caller_callee_details group by customer_name)
select * from total_duration_details where total_duration >= 10
------------------------------------------------------------------------------------------------------------------------------------------------


---TASK3
create database ineuron_task3;
use database ineuron_task3;

create table transactions(
amount integer not null,
date date not null
);

insert into transactions(amount,date) values (1000,'2020-01-06');
insert into transactions(amount,date) values(-10,'2020-01-14');
insert into transactions(amount,date) values(-75,'2020-01-20');
insert into transactions(amount,date) values(-5,'2020-01-25');
insert into transactions(amount,date) values(-4,'2020-01-29');
insert into transactions(amount,date) values(2000,'2020-03-10');
insert into transactions(amount,date) values(-75,'2020-03-12');
insert into transactions(amount,date) values(-20,'2020-03-15');
insert into transactions(amount,date) values(40,'2020-03-15');
insert into transactions(amount,date) values(-50,'2020-03-17');
insert into transactions(amount,date) values(200,'2020-10-10');
insert into transactions(amount,date) values(-200,'2020-10-10');

select * from transactions;

with new_table as (select sum(amount) as total_trans, count(amount) as no_of_trans
from transactions where amount<0 group by year(date),month(date)                  
having total_trans<=-100 and no_of_trans>=3)
select sum(amount)-(5*(12-(select count(*) from new_table))) as balance from transactions;
---------------------------------------------------------------------------------------------


--TASK3.2

truncate table transactions;

insert into transactions values (1,'2020-06-29');
insert into transactions values(35,'2020-02-20');
insert into transactions values(-50,'2020-02-03');
insert into transactions values(-1,'2020-02-26');
insert into transactions values(-200,'2020-08-01');
insert into transactions values(-44,'2020-02-07');
insert into transactions values(-5,'2020-02-25');
insert into transactions values(1,'2020-06-29');
insert into transactions values(1,'2020-06-29');
insert into transactions values(-100,'2020-12-29');
insert into transactions values(-100,'2020-12-30');
insert into transactions values(-100,'2020-12-31');

select * from transactions;

with new_table as (select sum(amount) as total_trans, count(amount) as no_of_trans
from transactions where amount<0 group by year(date),month(date)                  
having total_trans<=-100 and no_of_trans>=3)
select sum(amount)-(5*(12-(select count(*) from new_table))) as balance from transactions;

--TASK3.3

truncate table transactions;

insert into transactions values(6000,'2020-04-03');
insert into transactions values(5000,'2020-04-02');
insert into transactions values(4000,'2020-04-01');
insert into transactions values(3000,'2020-03-01');
insert into transactions values(2000,'2020-02-01');
insert into transactions values(1000,'2020-01-01');

select * from transactions;

with new_table as (select sum(amount) as total_trans, count(amount) as no_of_trans
from transactions where amount<0 group by year(date),month(date)                  
having total_trans<=-100 and no_of_trans>=3)
select sum(amount)-(5*(12-(select count(*) from new_table))) as balance from transactions;












   
   
   
   
   
   
   
   
